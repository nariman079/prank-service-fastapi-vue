services:
  db:
    image: mongo
    volumes:
      - mongo_data:/data/db
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root  # Установите имя пользователя
      MONGO_INITDB_ROOT_PASSWORD: password  # Установите пароль
    network_mode: 'host'

  mongo-express:
    image: mongo-express  # Админ-интерфейс MongoDB
    container_name: mongo-express
    restart: always
    ports:
      - "8081:8081"      # Открываем порт для Mongo Express
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root  # Пользователь для входа
      ME_CONFIG_MONGODB_ADMINPASSWORD: password  # Пароль для входа
      ME_CONFIG_MONGODB_SERVER: localhost    # Имя хоста MongoDB (совпадает с сервисом)
    depends_on:
      - db
    network_mode: 'host'

  cache:
    container_name: cache_test
    image: 'redis:alpine'
    command: redis-server
    restart: unless-stopped
    network_mode: 'host'

  backend:
    container_name: backend_test
    build: .
    command: poetry run uvicorn backend.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./:/app
      - uploads:/app/uploads
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - REDIS_HOST=redis://localhost:6379
    depends_on:
      - cache
      - db
    network_mode: 'host'

  celery:
    container_name: async_tasks
    build: .
    command: poetry run celery -A backend.worker worker -l info
    restart: unless-stopped
    volumes:
      - ./:/app
      - uploads:/app/uploads
    environment:
      - REDIS_HOST=redis://localhost:6379
    depends_on:
      - backend
      - db
    network_mode: 'host'


  load_balancer:
    container_name: load_balancer_test
    image: nginx
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx/nginx.local.conf:/etc/nginx/nginx.conf
      - ./nginx/tiktok.conf:/etc/nginx/conf.d/tiktok.conf
      - ./frontend/dist:/app/tiktok
      - /etc/letsencrypt:/etc/letsencrypt/
    depends_on:
      - backend
    network_mode: 'host'

networks:
  net:
    driver: bridge

volumes:
  uploads:
  mongo_data:
    driver: local